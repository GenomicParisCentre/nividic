<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
/*
 *                      Nividic development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU Lesser General Public Licence.  This should
 * be distributed with the code.  If you do not have a copy,
 * see:
 *
 *      http://www.gnu.org/copyleft/lesser.html
 *
 * Copyright for this code is held jointly by the microarray platform
 * of the École Normale Supérieure and the individual authors.
 * These should be listed in @author doc comments.
 *
 * For more information on the Nividic project and its aims,
 * or to join the Nividic mailing list, visit the home page
 * at:
 *
 *      http://www.transcriptome.ens.fr/nividic
 *
 */
 -->

<document>

  <properties>
    <title>BioAssay Filter tutorial</title>
    <author email="jourdren@biologie.ens.fr">Laurent Jourdren</author>
  </properties>

  <body>
  
    <section name="Generic Filters">
    
    <p>Nividic possess a powerful and highly customizable system to filter values in BioAssay Objects. Three 3 classes allow you to filter BioAssay:</p>
    
    <ul>
      <li><code>BioAssayGenericDoubleFieldFilter</code></li>
      <li><code>BioAssayGenericIntegerFieldFilter</code></li>
      <li><code>BioAssayGenericStringFieldFilter</code></li>
    </ul>
    
    <p>All this classes are abstract classes, you need to implements 2 methods:</p>
    
    <ul>
      <li><code>String getFieldToFilter()</code> To set the field of the bioAssay to filter.</li>
      <li><code>boolean testValueofXxxField(final xxx value);</code> To test if the value is good or bad. There xxx represent the type of the value (e.g. Double for double type field).</li>
    </ul>
    
    <p>The following sample define a filter to remove all spot which flag is lower than 0:</p>
    
    <source>
    
    BioAssayFilter filter = new BioAssayGenericIntegerFieldFilter() {

      public String getFieldToFilter() {
        return BioAssay.FIELD_NAME_FLAG;
      }

      public boolean testValueofIntegerField(int value) {
        return value>=0;
      }
    }
    ;
    BioAssay b2 = filter.filter(bioAssay);
    </source>
    
    <p>A class called <code>BioAssayBadFlagsFilter</code> already do the same the work in Nividic. This class implements the abstract <code>BioAssayFlagsFilter</code> class which is a <code>BioAssayGenericIntegerFieldFilter</code> class dedicated to filter the flags of a <code>BioAssay</code> object.</p>
    
    </section>  
    
    <section name="More complex filters">
    
      <p>You can define more complex filters by implementing the interface <code>BioAssayFilter</code> in your own class. To do this, you need to implemement this method:</p>
      
      <source>BioAssay filter(BioAssay bioAssay) throws BioAssayRuntimeException;</source>
      
       
    </section>
    
  </body>
</document>